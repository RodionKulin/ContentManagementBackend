@using ContentManagementBackend
@using ContentManagementBackend.Demo
@using ContentManagementBackend.Demo.App_Resources
@using MvcPaging
@using MongoDB.Bson
@using System.Web.Mvc.Html


@helper ItemsPager(System.Web.Mvc.HtmlHelper htmlHelper, IPagerVM model, object routeValues = null)
{
    if (model.TotalPages > 1)
    {
        <div class="al-pagination">           
            @htmlHelper.Raw(htmlHelper.Pager(
                 new Options
                 {
                     PageSize = model.PageSize,
                     TotalItemCount = model.TotalItems,
                     CurrentPage = model.Page,
                     ItemTexts = new ItemTexts()
                     {
                         Next = string.Empty,
                         Previous = string.Empty,
                         First = GlobalContent.Common_Paging_First,
                         Last = GlobalContent.Common_Paging_Last
                     },
                     ItemIcon = new ItemIcon()
                     {
                         Previous = "fa fa-chevron-left",
                         Next = "fa fa-chevron-right"
                     },
                     TooltipTitles = new TooltipTitles()
                     {
                         Next = GlobalContent.Common_Paging_Next_Title,
                         Previous = GlobalContent.Common_Paging_Prev_Title,
                         Page = GlobalContent.Common_Paging_Page_Title,
                         First = GlobalContent.Common_Paging_First_Title,
                         Last = GlobalContent.Common_Paging_Last_Title
                     },
                     Size = Size.normal,
                     Alignment = Alignment.centered,
                     IsShowControls = true,
                     IsShowFirstLast = true,
                     CssClass = "light-theme"
                 },
                 routeValues != null
                 ? routeValues
                 : new {
                     Controller = @htmlHelper.LayoutVM().Controller,
                     Action = @htmlHelper.LayoutVM().Action,

                 })
            )
        </div>
    }
    else
    {
        <div class="mtop-small"></div>
    }
}

@helper PostTile(ContentRenderVM<ObjectId> contentVM)
{
    <div class="al-block">
        <a class="black-link" href="@contentVM.Url">
            <span class="al-date to-local-date">@contentVM.PublishTimeIso8601</span>
            <img src="/content/images/empty.gif" alt=""
                 style="background-image:url('@contentVM.ImageUrl')">
            <div class="al-footer">
                <div class="al-message">
                    <i class="fa fa-eye"></i>
                    <span>@contentVM.Content.ViewsCount</span>
                    <i class="fa fa-comment"></i>
                    <span>@contentVM.Content.CommentsCount</span>
                </div>
                <div class="al-title">
                    <div title="@contentVM.Content.Title">@contentVM.Content.Title</div>
                </div>
            </div>
        </a>
    </div>
}
@helper PostTileKO()
{
    <div class="al-block">
        <a class="black-link" data-bind="attr: {href: url}">
            <span class="al-date" data-bind="html: publishTimeUtc"></span>
            <img src="/content/images/empty.gif" alt=""
                 data-bind="style: {'backgroundImage': 'url('+ imageUrl +')'}">
            <div class="al-footer">
                <div class="al-message">
                    <i class="fa fa-comment"></i>
                    <span data-bind="text: commentsCount"></span>
                </div>
                <div class="al-title">
                    <h2 data-bind="text: title, attr: { title: title }"></h2>
                </div>
            </div>
        </a>
    </div>
}

@helper PostShort(System.Web.Mvc.HtmlHelper htmlHelper, ContentRenderVM<ObjectId> contentVM)
{
    <div class="mbottom-small">
        <div class="als-title">
            <a class="black-link" href="@contentVM.Url" title="@htmlHelper.Raw(contentVM.Content.Title)">
                @htmlHelper.Raw(contentVM.Content.Title)
            </a>
        </div>
        <div class="als-metadata">
            <span class="to-local-date">@contentVM.PublishTimeIso8601</span>
            @htmlHelper.ActionLink(contentVM.Category.Name, "Category", "Posts"
            , new { categoryUrl = contentVM.Category.Url }, new { @class = "red-link" })

            <div class="als-links">
                <a href="@contentVM.Url" title="@GlobalContent.Common_PostViews" class="black-link">
                    <i class="fa fa-eye"></i>
                    <span>@contentVM.Content.ViewsCount</span>
                </a>
                <a href="@contentVM.Url" title="@GlobalContent.Common_PostComments" class="black-link">
                    <i class="fa fa-comment"></i>
                    <span>@contentVM.Content.CommentsCount</span>
                </a>
            </div>
        </div>
        @if (!(contentVM.Content is YoutubePost<ObjectId>))
        {
            <div class="als-preview">
                <a href="@contentVM.Url">
                    <img src="/content/images/empty.gif" alt=""
                         style="background-image:url('@contentVM.ImageUrl')">
                </a>
            </div>
        }        
        <div>
            @htmlHelper.Raw(contentVM.Content.ShortContent)
        </div>
        <div class="clear"></div>
    </div>
}
@helper PostShortKO()
{
    <div class="mbottom-small">
        <div class="als-title">
            <a class="black-link" href="#" data-bind="text: title, attr: { title: title, href: url }"></a>
        </div>
        <div class="als-metadata">
            <span class="to-local-date" data-bind="text: publishTimeUtc"></span>
            <a class="red-link" href="#" data-bind="text: categoryName, attr: { href: categoryUrl }"></a>
            <div class="als-links">
                <a data-bind="attr: { href: url }" href="#" title="@GlobalContent.Common_PostViews" class="black-link">
                    <i class="fa fa-eye"></i>
                    <span data-bind="text: viewsCount"></span>
                </a>
                <a data-bind="attr: { href: url }" href="#" title="@GlobalContent.Common_PostComments" class="black-link">
                    <i class="fa fa-comment"></i>
                    <span data-bind="text: commentsCount"></span>
                </a>
            </div>
        </div>
        <div class="als-preview" data-bind="visible: showImage">
            <a data-bind="attr: { href: url }" href="#">
                <img src="/content/images/empty.gif" alt=""
                     data-bind="style: {'backgroundImage': 'url('+ imageUrl +')'}">
            </a>
        </div>
        <div data-bind="html: shortContent"></div>
        <div class="clear"></div>
    </div>
}
@model ContentEditVM<ObjectId>

@{
    ViewBag.Title = Model.IsEditPage
        ? GlobalContent.Post_Edit_Title
        : GlobalContent.Post_Add_Title;
}

<div class="art-content">
    <section>
        <form id="articleForm" class="form-horizontal" role="form"
              action="@Request.Url.PathAndQuery" method="POST">

            <input type="hidden" name="ContentID" id="contentID" value="@Model.ContentID" />
            <input type="hidden" name="ImageID" id="imageID" value="@Model.ImageID" />
            <input type="hidden" name="ImageStatus" id="imageStatus" value="@Model.ImageStatus" />
            <input type="hidden" name="OriginalUrl" id="originalUrl" value="@Model.OriginalUrl" />
            <input type="hidden" name="Content.PublishTimeUtc" id="publishTimeUtc" value="@Model.PublishTimeIso8601" />
            <input type="hidden" name="UpdateNonce" id="updateNonce" value="@Model.Content.UpdateNonce" />
            <input type="hidden" name="MatchUpdateNonce" id="matchUpdateNonce" value="@Model.MatchUpdateNonce.ToString()" />

            @if (!string.IsNullOrEmpty(Model.Error))
            {
                <div class="alert alert-danger" role="alert">
                    @Model.Error
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(m => m.Content.IsPublished, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.CheckBoxFor(m => m.Content.IsPublished)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Content.PublishTimeUtc, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    <div class="input-group date" id="datetimepicker1">
                        <input type="text" class="form-control" />
                        <span class="input-group-addon">
                            <span class="fa fa-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Content.CategoryID, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Content.CategoryID, Model.Categories, new { @class = "form-control col-md-2 " })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Content.Title, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Content.Title, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Content.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Content.ShortContent, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    <textarea name="Content.ShortContent" id="shortContent" style="display:none">
                        @Model.Content.ShortContent
                    </textarea>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Content.FullContent, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    <textarea name="Content.FullContent" id="fullContent" style="display:none">
                        @Model.Content.FullContent
                    </textarea>
                </div>
            </div>

            <div class="form-group">
                @Html.Label(GlobalContent.Post_Edit_ImageTitle, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.Partial("_UploaderPartial", Model.ImageUrl ?? "")
                </div>
            </div>

            <div id="fullPreviewContainer" class="form-group" style="display:none">
                <h2 class="title">@GlobalContent.Post_Edit_PreviewPostTitle</h2>
                <div id="fullPreviewText" class="af-left-col af-content sb-content"></div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10 art-actionpanel">
                    <input type="submit" class="btn btn-primary"
                           value="@GlobalContent.Common_Save" />

                    <input type="submit" class="btn btn-primary" id="fullPreviewTrigger"
                           value="@GlobalContent.Post_Edit_PreviewPostButton" />

                    @if (Model.IsEditPage)
                    {
                        <input id="deletePost" type="button" class="btn btn-danger"
                               value="@GlobalContent.Common_Delete" />

                        <i id="panelLoading" class="fa fa-spinner fa-pulse" style="display:none"></i>
                    }
                </div>
            </div>
        </form>
    </section>

</div>

@*nonce modal*@
@if (Model.UpdateResult == ContentUpdateResult.NonceChanged)
{
    <div id="nonceModal" class="modal bs-example-modal-sm" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">@GlobalContent.Post_Edit_UpdateNonceModalTitle</h4>
                </div>
                <div class="modal-body">
                    @MessageResources.Content_WrongUpdateNonce
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">@GlobalContent.Common_Cancel</button>
                    <button id="ignoreNonce" type="button" class="btn btn-primary">@GlobalContent.Common_Save</button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    @Styles.Render("~/content/datetimepicker")
    @Styles.Render("~/content/posts-edit")

    @Scripts.Render("~/content/jsajax")
    @Scripts.Render("~/content/jsdatetimepicker")
    <script type="text/javascript" src="/content/scripts/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        var maxFileSize = @Model.PreviewImageSizeLimit
        var maxSizeError = '@string.Format(MessageResources.Image_SizeExceeeded, Model.PreviewImageSizeLimit)'
        var fileTypeError = '@GlobalContent.ImageUploader_FormatException'
        var uploadFailError = '@MessageResources.Image_ReceiveException'

        var datepickerLocals = {
            selectMonth: '@GlobalContent.BsDatetimePicker_SelectMonth',
            prevMonth: '@GlobalContent.BsDatetimePicker_PrevMonth',
            nextMonth: '@GlobalContent.BsDatetimePicker_NextMonth',
            selectYear: '@GlobalContent.BsDatetimePicker_SelectYear',
            prevYear: '@GlobalContent.BsDatetimePicker_PrevYear',
            nextYear: '@GlobalContent.BsDatetimePicker_NextYear',
            selectDecade: '@GlobalContent.BsDatetimePicker_SelectDecade',
            prevDecade: '@GlobalContent.BsDatetimePicker_PrevDecade',
            nextDecade: '@GlobalContent.BsDatetimePicker_NextDecade',
            prevCentury: '@GlobalContent.BsDatetimePicker_PrevCentury',
            nextCentury: '@GlobalContent.BsDatetimePicker_NextCentury'
        }

        var confirmLocals = {
            title: '@GlobalContent.Common_Confirm',
            btnOkLabel: '@GlobalContent.Common_Yes',
            btnCancelLabel: '@GlobalContent.Common_No',
        }

        CKEDITOR.stylesSet.add('basic_styles',
        [
            { name: '@GlobalContent.Ckeditor_Subtitle', element: 'h2', attributes: { 'class': 'cke-header' } },
            { name: '@GlobalContent.Ckeditor_Image', element: 'img', attributes: { 'class': 'cke-img' } },
            { name: '@GlobalContent.Ckeditor_ImageLeft', element: 'img', attributes: { 'class': 'cke-img-alignleft' } },
            { name: '@GlobalContent.Ckeditor_ImageRight', element: 'img', attributes: { 'class': 'cke-img-alignright' } },
            { name: '@GlobalContent.Ckeditor_ImageFullWidth', element: 'img', attributes: { 'class': 'cke-img-full' } }
        ])
        CKEDITOR.config.stylesSet = 'basic_styles'
    </script>
    @Scripts.Render("~/content/jsarticles-edit")
}